//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Practices.RecipeFramework.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Practices.RecipeFramework.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An asset reference must be sited on the appropriate reference service before execution..
        /// </summary>
        internal static string AssetReference_NotSitedOnService {
            get {
                return ResourceManager.GetString("AssetReference_NotSitedOnService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t deserialize references. Check that asset reference types can be resolved..
        /// </summary>
        internal static string AssetReferenceSerializer_CantDeserialize {
            get {
                return ResourceManager.GetString("AssetReferenceSerializer_CantDeserialize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t serialize references. Check that all asset reference types are serializable..
        /// </summary>
        internal static string AssetReferenceSerializer_CantSerialize {
            get {
                return ResourceManager.GetString("AssetReferenceSerializer_CantSerialize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A reference that applies to {0} already exists. Reference key is {1}..
        /// </summary>
        internal static string AssetReferenceService_DuplicateReference {
            get {
                return ResourceManager.GetString("AssetReferenceService_DuplicateReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Function IsEnabledFor is not correctly implemented because it threw an exception.
        /// </summary>
        internal static string AssetReferenceService_FailEnabledFor {
            get {
                return ResourceManager.GetString("AssetReferenceService_FailEnabledFor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to References must be either bound or unbound, so they must implement the IBoundAssetReference interface in the first case, or IUnboundAssetReference in the later..
        /// </summary>
        internal static string AssetReferenceService_MustBeBoundOrUnbound {
            get {
                return ResourceManager.GetString("AssetReferenceService_MustBeBoundOrUnbound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indexer of type {0} was not found in the service..
        /// </summary>
        internal static string AssetReferenceService_NoIndexer {
            get {
                return ResourceManager.GetString("AssetReferenceService_NoIndexer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The reference service can only be sited on a GuidancePackage container..
        /// </summary>
        internal static string AssetReferenceService_NotSitedOnPackage {
            get {
                return ResourceManager.GetString("AssetReferenceService_NotSitedOnPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bound recipe {0} on package {1} can&apos;t be used on an unbound reference..
        /// </summary>
        internal static string AssetReferenceService_WrongForBound {
            get {
                return ResourceManager.GetString("AssetReferenceService_WrongForBound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unbound recipe {0} on package {1} can&apos;t be used on a bound reference..
        /// </summary>
        internal static string AssetReferenceService_WrongForUnbound {
            get {
                return ResourceManager.GetString("AssetReferenceService_WrongForUnbound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Abort.
        /// </summary>
        internal static string ErrorHelper_Abort {
            get {
                return ResourceManager.GetString("ErrorHelper_Abort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Cancel.
        /// </summary>
        internal static string ErrorHelper_Cancel {
            get {
                return ResourceManager.GetString("ErrorHelper_Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recipe Framework Error.
        /// </summary>
        internal static string ErrorHelper_Caption {
            get {
                return ResourceManager.GetString("ErrorHelper_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Ignore.
        /// </summary>
        internal static string ErrorHelper_Ignore {
            get {
                return ResourceManager.GetString("ErrorHelper_Ignore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;No.
        /// </summary>
        internal static string ErrorHelper_No {
            get {
                return ResourceManager.GetString("ErrorHelper_No", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;OK.
        /// </summary>
        internal static string ErrorHelper_OK {
            get {
                return ResourceManager.GetString("ErrorHelper_OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Retry.
        /// </summary>
        internal static string ErrorHelper_Retry {
            get {
                return ResourceManager.GetString("ErrorHelper_Retry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Yes.
        /// </summary>
        internal static string ErrorHelper_Yes {
            get {
                return ResourceManager.GetString("ErrorHelper_Yes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument can not be null or have an empty value..
        /// </summary>
        internal static string General_ArgumentEmpty {
            get {
                return ResourceManager.GetString("General_ArgumentEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Component {0} must be sited in a container in order to function properly..
        /// </summary>
        internal static string General_ComponentMustBeSited {
            get {
                return ResourceManager.GetString("General_ComponentMustBeSited", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument {0} must be of type {1}..
        /// </summary>
        internal static string General_InvalidArgumentType {
            get {
                return ResourceManager.GetString("General_InvalidArgumentType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type {0} can not be assigned to required type {1}..
        /// </summary>
        internal static string General_TypeIsNotAssignable {
            get {
                return ResourceManager.GetString("General_TypeIsNotAssignable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Component {0} must be sited in a container of type {1} in order to function properly..
        /// </summary>
        internal static string General_WrongContainer {
            get {
                return ResourceManager.GetString("General_WrongContainer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t execute a new recipe while another one is already executing. Currently running {0} recipe..
        /// </summary>
        internal static string GuidancePackage_AlreadyExecutingRecipe {
            get {
                return ResourceManager.GetString("GuidancePackage_AlreadyExecutingRecipe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A package can not be initialized multiple times with different configurations..
        /// </summary>
        internal static string GuidancePackage_AlreadyInitialized {
            get {
                return ResourceManager.GetString("GuidancePackage_AlreadyInitialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package configuration is invalid..
        /// </summary>
        internal static string GuidancePackage_CantLoadConfig {
            get {
                return ResourceManager.GetString("GuidancePackage_CantLoadConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package configuration file {0} doesn&apos;t exist..
        /// </summary>
        internal static string GuidancePackage_ConfigurationNotFound {
            get {
                return ResourceManager.GetString("GuidancePackage_ConfigurationNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error reading the manifest file for the Guidance Automation Extensions. The error is --&gt; {0}.
        /// </summary>
        internal static string GuidancePackage_CorruptedManifest {
            get {
                return ResourceManager.GetString("GuidancePackage_CorruptedManifest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration file associated with the package is invalid: {0}..
        /// </summary>
        internal static string GuidancePackage_InvalidConfigurationFile {
            get {
                return ResourceManager.GetString("GuidancePackage_InvalidConfigurationFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initial state contained an entry with a null key and is being removed..
        /// </summary>
        internal static string GuidancePackage_InvalidStateKey {
            get {
                return ResourceManager.GetString("GuidancePackage_InvalidStateKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initial state for argument {0} has an invalid value and is being removed..
        /// </summary>
        internal static string GuidancePackage_InvalidStateValue {
            get {
                return ResourceManager.GetString("GuidancePackage_InvalidStateValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}:{1}.
        /// </summary>
        internal static string GuidancePackage_LoggingMesage {
            get {
                return ResourceManager.GetString("GuidancePackage_LoggingMesage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The manifest file for the Guidance Automation Runtime is missing, please try to repair the installation..
        /// </summary>
        internal static string GuidancePackage_MissingManifest {
            get {
                return ResourceManager.GetString("GuidancePackage_MissingManifest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration received doesn&apos;t have a BaseURI, so it&apos;s not possible to determine its initial location. Ensure you don&apos;t use a constructor for an XmlReader that receives a stream.Pass the complete file location instead. Base location of the package will be set to the location of the framework installation..
        /// </summary>
        internal static string GuidancePackage_NoBaseURI {
            get {
                return ResourceManager.GetString("GuidancePackage_NoBaseURI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The guidance package must be initialized with appropriate configuration before being used..
        /// </summary>
        internal static string GuidancePackage_NotInitialized {
            get {
                return ResourceManager.GetString("GuidancePackage_NotInitialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In order to suspend a recipe execution, a persistence service must be in place..
        /// </summary>
        internal static string GuidancePackage_PersistenceServiceRequired {
            get {
                return ResourceManager.GetString("GuidancePackage_PersistenceServiceRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recipe {0} does not exist in package {1}..
        /// </summary>
        internal static string GuidancePackage_RecipeDoesntExist {
            get {
                return ResourceManager.GetString("GuidancePackage_RecipeDoesntExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recipe {0} does not exist in package {1}..
        /// </summary>
        internal static string GuidancePackage_RecipeNotExists {
            get {
                return ResourceManager.GetString("GuidancePackage_RecipeNotExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For security reasons, the location of the package configuration must be file path..
        /// </summary>
        internal static string GuidancePackage_UriNoFile {
            get {
                return ResourceManager.GetString("GuidancePackage_UriNoFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type converter for argument {0} returned a value which is not compatible with the argument type..
        /// </summary>
        internal static string IDictionaryService_InvalidConvertedValue {
            get {
                return ResourceManager.GetString("IDictionaryService_InvalidConvertedValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key {0} does not correspond to any argument in the recipe..
        /// </summary>
        internal static string IDictionaryService_InvalidKey {
            get {
                return ResourceManager.GetString("IDictionaryService_InvalidKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value {0} specified for argument {1} can&apos;t be converted to the argument type {2}..
        /// </summary>
        internal static string IDictionaryService_InvalidType {
            get {
                return ResourceManager.GetString("IDictionaryService_InvalidType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value for argument {0} is not valid..
        /// </summary>
        internal static string IDictionaryService_InvalidValue {
            get {
                return ResourceManager.GetString("IDictionaryService_InvalidValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The dictionary service is read-only..
        /// </summary>
        internal static string IDictionaryService_ReadOnlyException {
            get {
                return ResourceManager.GetString("IDictionaryService_ReadOnlyException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At most one unbound reference can point to a given asset. Asset {0} already contains has reference..
        /// </summary>
        internal static string Indexer_AtMostOnUnboundPerAsset {
            get {
                return ResourceManager.GetString("Indexer_AtMostOnUnboundPerAsset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The indexer {0} requires at least {1} arguments to locate references..
        /// </summary>
        internal static string Indexer_RequiredArgCount {
            get {
                return ResourceManager.GetString("Indexer_RequiredArgCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path contains invalid characters, is empty, or contains only white spaces..
        /// </summary>
        internal static string IPersistenceService_InvalidPath {
            get {
                return ResourceManager.GetString("IPersistenceService_InvalidPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Microsoft Recipe Framework.
        /// </summary>
        internal static string LoggingService_Category {
            get {
                return ResourceManager.GetString("LoggingService_Category", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid installer arguments. For host binding installation, Host (name) and Installer (full type name) arguments need to be passed. For package installation, the Configuration argument must contain the full path of the package configuration file..
        /// </summary>
        internal static string ManifestInstaller_BadArguments {
            get {
                return ResourceManager.GetString("ManifestInstaller_BadArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A package with the name {0} already exists with a different Guid. Unregister that package before registering a new package with the same name and a different GUID, or use both the same GUID and the same name in new package..
        /// </summary>
        internal static string ManifestInstaller_CannotChangeGuid {
            get {
                return ResourceManager.GetString("ManifestInstaller_CannotChangeGuid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close any instances of Visual Studio before running the installer. You can locate them through the Task Manager, as &quot;devenv.exe&quot;..
        /// </summary>
        internal static string ManifestInstaller_DevenvRunning {
            get {
                return ResourceManager.GetString("ManifestInstaller_DevenvRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package with Guid {0} is already installed..
        /// </summary>
        internal static string ManifestInstaller_DuplicatedPackageGuid {
            get {
                return ResourceManager.GetString("ManifestInstaller_DuplicatedPackageGuid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The uninstallation of the Guidance Automation Runtime cannot be done. You must first uninstall the following guidance package(s): {0}.
        /// </summary>
        internal static string ManifestInstaller_ErrorPackageInstalled {
            get {
                return ResourceManager.GetString("ManifestInstaller_ErrorPackageInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning: host binding {0} is already installed on this machine..
        /// </summary>
        internal static string ManifestInstaller_HostAlreadyInstalled {
            get {
                return ResourceManager.GetString("ManifestInstaller_HostAlreadyInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No binding has been installed in the current machine for host {0}..
        /// </summary>
        internal static string ManifestInstaller_HostBindingNotFound {
            get {
                return ResourceManager.GetString("ManifestInstaller_HostBindingNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} specified hive is invalid or does not exists..
        /// </summary>
        internal static string ManifestInstaller_InvalidHive {
            get {
                return ResourceManager.GetString("ManifestInstaller_InvalidHive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installer type {0} is not valid as it doesn&apos;t implement the required IHostInstaller interface..
        /// </summary>
        internal static string ManifestInstaller_InvalidHostInstaller {
            get {
                return ResourceManager.GetString("ManifestInstaller_InvalidHostInstaller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The manifest file does not exist, uninstallation cannot continue..
        /// </summary>
        internal static string ManifestInstaller_ManifestNotExist {
            get {
                return ResourceManager.GetString("ManifestInstaller_ManifestNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t locate Hosts node on the manifest configuration file. It may be corrupted. Try deleting the manifest and reinstalling the product..
        /// </summary>
        internal static string ManifestInstaller_NoHosts {
            get {
                return ResourceManager.GetString("ManifestInstaller_NoHosts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package named {0} is already installed. If you are upgrading, uninstall the existing one first..
        /// </summary>
        internal static string ManifestInstaller_PackageAlreadyInstalled {
            get {
                return ResourceManager.GetString("ManifestInstaller_PackageAlreadyInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The manifest file does not contain an entry for the guidance package {0}  or the manifest file does not exist, uninstallation cannot continue..
        /// </summary>
        internal static string ManifestInstaller_PackageUninstallNotInManifest {
            get {
                return ResourceManager.GetString("ManifestInstaller_PackageUninstallNotInManifest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstalling guidance package {0}..
        /// </summary>
        internal static string ManifestInstaller_UninstallingPackage {
            get {
                return ResourceManager.GetString("ManifestInstaller_UninstallingPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In order to succesfully uninstall the product, Visual Studio must be installed. The file {0} cannot be found and the uninstallation will fail..
        /// </summary>
        internal static string ManifestInstaller_VSRemoved {
            get {
                return ResourceManager.GetString("ManifestInstaller_VSRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Action {0} failed to execute:
        ///{1}.
        /// </summary>
        internal static string Recipe_ActionExecutionFailed {
            get {
                return ResourceManager.GetString("Recipe_ActionExecutionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property {0} on action of type {2} doesn&apos;t have the OutputAttribute required to be declared in order to be used as output from the configuration for action {1}..
        /// </summary>
        internal static string Recipe_ActionOutputInvalid {
            get {
                return ResourceManager.GetString("Recipe_ActionOutputInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Action named {2} uses output {0} from action named {1}, but its type {3} doesn&apos;t have a corresponding property with the required OutputAttribute..
        /// </summary>
        internal static string Recipe_ActionOutputMissing {
            get {
                return ResourceManager.GetString("Recipe_ActionOutputMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Action {0} takes its input named {1} from the output of an action named {2} that doesn&apos;t exist in the current recipe..
        /// </summary>
        internal static string Recipe_ActionOutputNull {
            get {
                return ResourceManager.GetString("Recipe_ActionOutputNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property {0} does not exist on type {1}..
        /// </summary>
        internal static string Recipe_ActionPropertyMissing {
            get {
                return ResourceManager.GetString("Recipe_ActionPropertyMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Action {0} failed to perform undo operation:
        ///{1}.
        /// </summary>
        internal static string Recipe_ActionUndoException {
            get {
                return ResourceManager.GetString("Recipe_ActionUndoException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value provider {0} can&apos;t monitor the same argument it&apos;s attached to (argument {1})..
        /// </summary>
        internal static string Recipe_ArgumentCantMonitorItself {
            get {
                return ResourceManager.GetString("Recipe_ArgumentCantMonitorItself", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A wizard was specified to collect missing arguments for the recipe, but no argument gathering strategy is in place..
        /// </summary>
        internal static string Recipe_ArgumentGatheringRequired {
            get {
                return ResourceManager.GetString("Recipe_ArgumentGatheringRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found {0} arguments in persisted state..
        /// </summary>
        internal static string Recipe_ArgumentsSaved {
            get {
                return ResourceManager.GetString("Recipe_ArgumentsSaved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument named {0} is not defined in the currently executing recipe..
        /// </summary>
        internal static string Recipe_ArgumentUndefined {
            get {
                return ResourceManager.GetString("Recipe_ArgumentUndefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot set value on property {0}..
        /// </summary>
        internal static string Recipe_CantSetActionProperty {
            get {
                return ResourceManager.GetString("Recipe_CantSetActionProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recipe can&apos;t be suspended..
        /// </summary>
        internal static string Recipe_CantSuspendRecipe {
            get {
                return ResourceManager.GetString("Recipe_CantSuspendRecipe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception occurred during the binding of reference or execution of recipe {0}. Error was: {1}. 
        ///You can remove the reference to this recipe through the Guidance Package Manager..
        /// </summary>
        internal static string Recipe_ExecutionException {
            get {
                return ResourceManager.GetString("Recipe_ExecutionException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Execution result was {0}.
        /// </summary>
        internal static string Recipe_ExecutionResult {
            get {
                return ResourceManager.GetString("Recipe_ExecutionResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument {0} has an invalid default value..
        /// </summary>
        internal static string Recipe_InvalidDefaultValue {
            get {
                return ResourceManager.GetString("Recipe_InvalidDefaultValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Arguments that are value types cannot be made optional unless they are Nullable&lt;T&gt;. Invalid arguments are:  {0}..
        /// </summary>
        internal static string Recipe_InvalidOptionalValueType {
            get {
                return ResourceManager.GetString("Recipe_InvalidOptionalValueType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following arguments are required and don&apos;t have values: {0}. Can&apos;t continue execution..
        /// </summary>
        internal static string Recipe_MissingRequiredArguments {
            get {
                return ResourceManager.GetString("Recipe_MissingRequiredArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No persistence service found..
        /// </summary>
        internal static string Recipe_NoPersistence {
            get {
                return ResourceManager.GetString("Recipe_NoPersistence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation requires a currently executing recipe..
        /// </summary>
        internal static string Recipe_NoRecipeExecuting {
            get {
                return ResourceManager.GetString("Recipe_NoRecipeExecuting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No previously saved state found..
        /// </summary>
        internal static string Recipe_NoSavedState {
            get {
                return ResourceManager.GetString("Recipe_NoSavedState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property {0} of type {1} must be annotated with the the InputAttribute..
        /// </summary>
        internal static string Recipe_NotMarkedInput {
            get {
                return ResourceManager.GetString("Recipe_NotMarkedInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reference applied to item {0}.
        /// </summary>
        internal static string Recipe_ReferenceApplied {
            get {
                return ResourceManager.GetString("Recipe_ReferenceApplied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting execution of recipe {0}..
        /// </summary>
        internal static string Recipe_StartingExecution {
            get {
                return ResourceManager.GetString("Recipe_StartingExecution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error happened while calling the value provider or evaluating the default value of argument {0}..
        /// </summary>
        internal static string Recipe_ValueProviderException {
            get {
                return ResourceManager.GetString("Recipe_ValueProviderException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to load value providers..
        /// </summary>
        internal static string Recipe_ValueProviderLoadFailed {
            get {
                return ResourceManager.GetString("Recipe_ValueProviderLoadFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Framework manifest contains location {0} for package {1} configuration file, but the file was not found..
        /// </summary>
        internal static string RecipeManager_InvalidPackageLocation {
            get {
                return ResourceManager.GetString("RecipeManager_InvalidPackageLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The framework manifest file was improperly modified and package {0} registered host no longer matches the one in the package configuration file. Package can&apos;t be loaded unless the Host value is the same in both files..
        /// </summary>
        internal static string RecipeManager_ManifestMangled {
            get {
                return ResourceManager.GetString("RecipeManager_ManifestMangled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Component name {0} doesn&apos;t match package name {1}..
        /// </summary>
        internal static string RecipeManager_NameDoesntMatch {
            get {
                return ResourceManager.GetString("RecipeManager_NameDoesntMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package {0} can only be used on host {1}. Current host {2} is not supported..
        /// </summary>
        internal static string RecipeManager_PackageHostMismatch {
            get {
                return ResourceManager.GetString("RecipeManager_PackageHostMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration file {0} for package {1} has been modified. Reinstallation is required..
        /// </summary>
        internal static string RecipeManager_PackageModified {
            get {
                return ResourceManager.GetString("RecipeManager_PackageModified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package named {0} enabled for this solution is not installed..
        /// </summary>
        internal static string RecipeManager_PackageNotInstalled {
            get {
                return ResourceManager.GetString("RecipeManager_PackageNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package {0} configuration file is located at {1} which is not a trusted location..
        /// </summary>
        internal static string RecipeManager_PackageNotTrusted {
            get {
                return ResourceManager.GetString("RecipeManager_PackageNotTrusted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package must be configured in order to be loaded by the manager..
        /// </summary>
        internal static string RecipeManager_UnconfiguredPackage {
            get {
                return ResourceManager.GetString("RecipeManager_UnconfiguredPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recipe reference {0} already exists..
        /// </summary>
        internal static string RecipeReferenceService_DuplicateRecipeItem {
            get {
                return ResourceManager.GetString("RecipeReferenceService_DuplicateRecipeItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only recipe reference components can be added to this container..
        /// </summary>
        internal static string RecipeReferenceService_InvalidComponentType {
            get {
                return ResourceManager.GetString("RecipeReferenceService_InvalidComponentType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AppliesTo threw an exception.
        /// </summary>
        internal static string Reference_AppliesToThrew {
            get {
                return ResourceManager.GetString("Reference_AppliesToThrew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type {0} is not assignable to type {1}..
        /// </summary>
        internal static string ReflectionHelper_CantAssignTo {
            get {
                return ResourceManager.GetString("ReflectionHelper_CantAssignTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t load assembly {0}. Verify if the type {1} syntax is correct..
        /// </summary>
        internal static string ReflectionHelper_CantLoadAssembly {
            get {
                return ResourceManager.GetString("ReflectionHelper_CantLoadAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t load type {0}..
        /// </summary>
        internal static string ReflectionHelper_CantLoadType {
            get {
                return ResourceManager.GetString("ReflectionHelper_CantLoadType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid assembly name {0}..
        /// </summary>
        internal static string ReflectionHelper_InvalidAssemblyName {
            get {
                return ResourceManager.GetString("ReflectionHelper_InvalidAssemblyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid qualified type name {0}..
        /// </summary>
        internal static string ReflectionHelper_InvalidQName {
            get {
                return ResourceManager.GetString("ReflectionHelper_InvalidQName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The XPath query was not executed against an XmlNode-based object (such as XmlDocument)..
        /// </summary>
        internal static string XmlNodeListFactory_IHasXmlNodeMissing {
            get {
                return ResourceManager.GetString("XmlNodeListFactory_IHasXmlNodeMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sort expression must be either a string or an XPathExpression..
        /// </summary>
        internal static string XPathCache_BadSortObject {
            get {
                return ResourceManager.GetString("XPathCache_BadSortObject", resourceCulture);
            }
        }
    }
}
